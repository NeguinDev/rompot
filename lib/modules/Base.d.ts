/// <reference types="node" />
import type { BotStatus } from "../types/Bot";
import { IBot } from "../interfaces/IBot";
import Client from "./Client";
import User from "./User";
import { BotEvents } from "../utils/Emmiter";
export declare function ClientBase(): Client<BotBase>;
export declare class BotBase implements IBot {
    id: string;
    status: BotStatus;
    ev: BotEvents;
    connect(auth: any): Promise<void>;
    reconnect(alert?: any): Promise<void>;
    stop(reason: any): Promise<void>;
    addReaction(message: any, reaction: any): Promise<void>;
    removeReaction(message: any): Promise<void>;
    readMessage(message: any): Promise<void>;
    send(message: any): Promise<any>;
    removeMessage(message: any): Promise<void>;
    deleteMessage(message: any): Promise<void>;
    downloadStreamMessage(media: any): Promise<Buffer>;
    getBotName(): Promise<string>;
    setBotName(name: any): Promise<void>;
    getBotDescription(): Promise<string>;
    setBotDescription(description: any): Promise<void>;
    getBotProfile(): Promise<Buffer>;
    setBotProfile(image: any): Promise<void>;
    addChat(chat: any): Promise<void>;
    removeChat(chat: any): Promise<void>;
    addUserInChat(chat: any, user: any): Promise<void>;
    removeUserInChat(chat: any, user: any): Promise<void>;
    promoteUserInChat(chat: any, user: any): Promise<void>;
    demoteUserInChat(chat: any, user: any): Promise<void>;
    changeChatStatus(chat: any, status: any): Promise<void>;
    createChat(chat: any): Promise<void>;
    leaveChat(chat: any): Promise<void>;
    getChat(chat: any): Promise<any>;
    setChat(chat: any): Promise<void>;
    getChatName(chat: any): Promise<string>;
    setChatName(chat: any, name: any): Promise<void>;
    getChatDescription(chat: any): Promise<string>;
    setChatDescription(chat: any, description: any): Promise<void>;
    getChatProfile(chat: any): Promise<Buffer>;
    setChatProfile(chat: any, profile: any): Promise<void>;
    getChatUsers(chat: any): Promise<{}>;
    getChatAdmins(chat: any): Promise<{}>;
    getChatLeader(chat: any): Promise<User>;
    getChats(): Promise<{}>;
    setChats(chats: any): Promise<void>;
    addUser(user: any): Promise<void>;
    removeUser(user: any): Promise<void>;
    getUser(user: any): Promise<any>;
    setUser(user: any): Promise<void>;
    getUserName(user: any): Promise<string>;
    setUserName(user: any, name: any): Promise<void>;
    getUserDescription(user: any): Promise<string>;
    setUserDescription(user: any, description: any): Promise<void>;
    getUserProfile(user: any): Promise<Buffer>;
    setUserProfile(user: any, profile: any): Promise<void>;
    unblockUser(user: any): Promise<void>;
    blockUser(user: any): Promise<void>;
    getUsers(): Promise<{}>;
    setUsers(users: any): Promise<void>;
}

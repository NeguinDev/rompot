/// <reference types="node" />
import { BotStatus, ChatStatus, IAuth, IBot, IBotEvents, IChat, IMessage, IReactionMessage, IUser, Media } from "rompot-base";
export default class BotBase implements IBot {
    id: string;
    status: BotStatus;
    ev: IBotEvents;
    connect(auth: IAuth): Promise<void>;
    connectByCode(phoneNumber: number | string, auth: string | IAuth): Promise<string>;
    reconnect(alert?: boolean): Promise<void>;
    stop(reason: any): Promise<void>;
    send(message: IMessage): Promise<IMessage>;
    sendMessage(chat: IChat | string, message: string | IMessage, mention?: IMessage): Promise<IMessage>;
    editMessage(message: IMessage): Promise<void>;
    addReaction(message: IReactionMessage): Promise<void>;
    removeReaction(message: IReactionMessage): Promise<void>;
    readMessage(message: IMessage): Promise<void>;
    removeMessage(message: IMessage): Promise<void>;
    deleteMessage(message: IMessage): Promise<void>;
    downloadStreamMessage(media: Media): Promise<Buffer>;
    getBotName(): Promise<string>;
    setBotName(name: string): Promise<void>;
    getBotDescription(): Promise<string>;
    setBotDescription(description: string): Promise<void>;
    getBotProfile(): Promise<Buffer>;
    setBotProfile(image: Buffer): Promise<void>;
    getChats(): Promise<Record<string, IChat>>;
    setChats(chats: Record<string, IChat>): Promise<void>;
    getChat(chat: IChat): Promise<IChat | null>;
    setChat(chat: IChat): Promise<void>;
    addChat(chat: IChat): Promise<void>;
    removeChat(chat: IChat): Promise<void>;
    createChat(chat: IChat): Promise<void>;
    leaveChat(chat: IChat): Promise<void>;
    addUserInChat(chat: IChat, user: IUser): Promise<void>;
    removeUserInChat(chat: IChat, user: IUser): Promise<void>;
    promoteUserInChat(chat: IChat, user: IUser): Promise<void>;
    demoteUserInChat(chat: IChat, user: IUser): Promise<void>;
    changeChatStatus(chat: IChat, status: ChatStatus): Promise<void>;
    getChatUsers(chat: IChat): Promise<Record<string, IUser>>;
    getChatAdmins(chat: IChat): Promise<Record<string, IUser>>;
    getChatLeader(chat: IChat): Promise<IUser>;
    getChatName(chat: IChat): Promise<string>;
    setChatName(chat: IChat, name: string): Promise<void>;
    getChatDescription(chat: IChat): Promise<string>;
    setChatDescription(chat: IChat, description: string): Promise<void>;
    getChatProfile(chat: IChat): Promise<Buffer>;
    setChatProfile(chat: IChat, profile: Buffer): Promise<void>;
    getUsers(): Promise<Record<string, IUser>>;
    setUsers(users: Record<string, IUser>): Promise<void>;
    getUser(user: IUser): Promise<IUser | null>;
    setUser(user: IUser): Promise<void>;
    addUser(user: IUser): Promise<void>;
    removeUser(user: IUser): Promise<void>;
    unblockUser(user: IUser): Promise<void>;
    blockUser(user: IUser): Promise<void>;
    getUserName(user: IUser): Promise<string>;
    setUserName(user: IUser, name: string): Promise<void>;
    getUserDescription(user: IUser): Promise<string>;
    setUserDescription(user: IUser, description: string): Promise<void>;
    getUserProfile(user: IUser): Promise<Buffer>;
    setUserProfile(user: IUser, profile: Buffer): Promise<void>;
}
